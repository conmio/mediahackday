package com.mediahackday.articleimport com.conmio.mediahackday.HeadlineRepositoryimport groovyx.net.http.ContentTypeimport com.conmio.mediahackday.headline.Headlineimport com.mediahackday.ArticleServiceimport com.conmio.mediahackday.article.Article/** * Created with IntelliJ IDEA. * User: haren * Date: 10/5/13 * Time: 5:51 PM * To change this template use File | Settings | File Templates. */class Afp4WService implements ArticleService {    def grailsApplication    def httpService    Article getArticle(String url, def feed) {        Article article = new Article()        try {            article.headline = feed.NewsItem.NewsComponent.NewsLines.HeadLine.toString()            article.location = feed.NewsItem.NewsComponent.DescriptiveMetadata.Location.Property.collect { it.@FormalName == 'City' ? it.@Value : null }            article.images = [:]            String photoUrl = url.replaceAll(/newsmlmmd\.urn\.newsml\.afp\.com\.\d{8}\.\w{8}\.\w{4}\.\w{4}\.\w{4}\.\w{12}\.xml/, '')            try {                article.images.medium = photoUrl + feed.NewsItem.NewsComponent.find { it.@Duid == "photo0"}?.NewsComponent.find { it.Role.@FormatName == "Quicklook"}.parent().@Href                article.images.high = photoUrl + feed.NewsItem.NewsComponent.find { it.@Duid == "photo0"}?.NewsComponent.find { it.Role.@FormatName == "HighDef"}.parent().@Href                article.images.small = photoUrl + feed.NewsItem.NewsComponent.find { it.@Duid == "photo0"}?.NewsComponent.find { it.Role.@FormatName == "Thumbnail"}.parent().@Href            } catch (Exception e) {                log.error "Error " + e.message()            }            // Summary -> feed.NewsItem.NewsComponent.NewsLines.NewsLine[0].NewsLineText            // Location -> feed.NewsItem.NewsComponent.DescriptiveMetadata.Location.Property.collect{ it.@FormalName == 'City'? return it.@Value }            // Photo -> feed.NewsItem.NewsComponent.find{ it.@Duid=="photo0"}?.NewsComponent.find{ it.Role.@FormatName=="Quicklook"}.parent()            // Photo -> feed.NewsItem.NewsComponent.find{ it.@Duid=="photo0"}?.NewsComponent.find{ it.Role.@FormatName=="HighDef"}.parent()            // Photo -> feed.NewsItem.NewsComponent.find{ it.@Duid=="photo0"}?.NewsComponent.find{ it.Role.@FormatName=="Thumbnail"}.parent()            // Regexp for parsing value  +            return article        } catch (Exception e) {            log.info "Could no retrieve Article $url: " + e.message        }        return null    }    List<Article> getArticles() {        return getArticles("")    }    List<Article> getArticles(String channelId) {        try {            String apiUrl = grailsApplication.config.afp4w.api.base.url            log.info "AFP4W retrieval from " + apiUrl            Map params = [:]            if (channelId) {                params['what_iptc'] = channelId            }            def resp = httpService.request(apiUrl, "POST", params + [type: ContentType.XML])            log.info "Got Response: " + resp.dump()            List articlesLinks = resp.NewsItem.NewsComponent.NewsComponent.collect { item -> item.NewsItemRef?.@NewsItem?.toString() /* .NewsItemRef.@NewsItem */ }            List<Article> articleList = []            articlesLinks.each { String articleLink ->                try {                    def articleResponse = httpService.request(articleLink, "POST", [type: ContentType.XML])                    articleList.add(getArticle(articleLink,articleResponse))                } catch (Exception e) {                    log.error("Could not retrieve Article... " + e.message)                }            }            return articleList        } catch (Exception e) {            log.error("Could not retrieve Articles, " + e.message)        }        return []        // return prepareHeadlines(grailsApplication.config.afp4w.api.base.url + "?what_iptc=" + grailsApplication.config.afp4w.api.IPTC.mapping.get(channelId))    }}